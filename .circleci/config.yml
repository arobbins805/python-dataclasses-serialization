version: 2
jobs:
  test-python-3-6: &test-python-3-6
    docker:
      - image: circleci/python:3.6

    environment: &environment-default
      OPTIONAL_MODULES: ""
      POSTPONED_ANNOTATIONS: ""

    steps:
      - checkout

      - run:
          name: Add optional modules to requirements.txt
          command: |
            echo "$OPTIONAL_MODULES" >> requirements.txt

      - run:
          name: Optionally add __future__.annotations import to basic tests
          command: |
            if [ "${POSTPONED_ANNOTATIONS}" ]; then
              printf '%s\n%s\n' "from __future__ import annotations" "$(cat tests/serializer_base/test_dataclasses.py)" > tests/serializer_base/test_dataclasses.py
            fi

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m unittest discover

  test-python-3-7:
    <<: *test-python-3-6

    docker:
      - image: circleci/python:3.7

  test-python-3-8:
    <<: *test-python-3-6

    docker:
      - image: circleci/python:3.8

  test-py-bson:
    <<: *test-python-3-6

    environment:
      <<: *environment-default
      OPTIONAL_MODULES: bson

  test-pymongo-bson:
    <<: *test-python-3-6

    environment:
      <<: *environment-default
      OPTIONAL_MODULES: pymongo

  test-postponed-annotations:
    <<: *test-python-3-6

    docker:
      - image: circleci/python:3.7

    environment:
      <<: *environment-default
      POSTPONED_ANNOTATIONS: 1

  deploy:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout

      - run:
          name: Add twine to requirements.txt
          command: |
            echo "twine" >> requirements.txt

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Verify module integrity
          command: |
            . venv/bin/activate
            python pypi_upload/setup.py verify

      - run:
          name: Initialize .pypirc
          command: |
            cat > pypi_upload/.pypirc << EOF
            [pypi]
            username: ${PYPI_USERNAME}
            password: ${PYPI_PASSWORD}
            EOF

      - run:
          name: Deploy to PyPI
          command: |
            . venv/bin/activate
            chmod +x pypi_upload/pypi_upload.sh
            ./pypi_upload/pypi_upload.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test-python-3-6:
          filters:
            tags:
              only: /.*/
      - test-python-3-7:
          filters:
            tags:
              only: /.*/
      - test-python-3-8:
          filters:
            tags:
              only: /.*/
      - test-py-bson:
          filters:
            tags:
              only: /.*/
      - test-pymongo-bson:
          filters:
            tags:
              only: /.*/
      - test-postponed-annotations:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - test-python-3-6
            - test-python-3-7
            - test-python-3-8
            - test-py-bson
            - test-pymongo-bson
            - test-postponed-annotations
          context: PyPI
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/